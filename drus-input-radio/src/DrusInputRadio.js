import { html, css, LitElement } from 'lit';
import { render as lightRender } from 'lit';

//let instanceCounter = 0;

export class DrusInputRadio extends LitElement {
    static get styles() {
        return css `
      :host label {
        display:flex;
        padding:10px;
        border:1px solid blue;
        border-radius:6px;
      }
    `;
    }

    static get properties() {
        return {
            labelPosition: { type: String },
            label: { type: String },
            name: { type: String },
        };
    }

    constructor() {
        super();
        this.labelPosition = undefined;
        this.label = undefined;
        this.name = undefined;
        //instanceCounter += 1;
    }

    _getInputTemplate() {
        return html `<input type="radio" name="${this.name}" id="${this._getID()}" />`;
        //`<input type="radio" name="${this.name}" hidden />`;
    }

    firstUpdated() {

        //const inputTemplate = html `<input type="radio" name="${this.name}" id="${this._getID()}" />`;
        lightRender(this._getInputTemplate(), this);
    }

    select() {
        this.querySelector('input').checked = true;
    }


    _getID() {
        //return this.querySelector('input').id;
        return '1' || this.id;
        //return this.id || `autoGeneratedId-${instanceCounter}`;
    }

    render() {
        return html `
        <label for="${this._getID()}" @click="${this.select}">
        <slot></slot>
        ${this.label}
        </label>
    `;

        /*
        <input
           id="${this.__getID()}"
           name="${this.name}"
           type="radio" />
           */
    }
}